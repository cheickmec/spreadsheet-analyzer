name: Documentation

on:
  push:
    branches: [main, develop]
    paths:
      - 'docs/**'
      - 'src/**/*.py'
      - 'README.md'
      - 'CLAUDE.md'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'docs/**'
      - 'src/**/*.py'
      - 'README.md'
      - 'CLAUDE.md'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: latest
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: |
          uv sync --all-extras
          uv add --dev mkdocs mkdocs-material mkdocstrings[python] mkdocs-jupyter

      - name: Check documentation links
        run: |
          uv run mkdocs build --strict 2>&1 | tee docs-build.log
        continue-on-error: true

      - name: Check docstring coverage
        run: |
          uv run python scripts/check_docstring_coverage.py \
            --source src/spreadsheet_analyzer \
            --min-coverage 80 \
            --output docstring-coverage.json

      - name: Verify CLAUDE.md anchors
        run: |
          uv run python scripts/verify_claude_anchors.py \
            --source src/spreadsheet_analyzer \
            --claude-md CLAUDE.md

      - name: Generate API documentation
        run: |
          uv run python scripts/generate_api_docs.py \
            --source src/spreadsheet_analyzer \
            --output docs/api

      - name: Build documentation
        run: |
          uv run mkdocs build

      - name: Generate Documentation Summary
        if: always()
        run: |
          echo "## 📚 Documentation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Build status
          echo "### Build Status" >> $GITHUB_STEP_SUMMARY
          if grep -q "ERROR" docs-build.log 2>/dev/null; then
            echo "❌ **Documentation build failed**" >> $GITHUB_STEP_SUMMARY
            echo "<details><summary>View errors</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep -E "(ERROR|WARNING)" docs-build.log | head -20 >> $GITHUB_STEP_SUMMARY || true
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Documentation built successfully**" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # Docstring coverage
          echo "### Docstring Coverage" >> $GITHUB_STEP_SUMMARY
          if [ -f docstring-coverage.json ]; then
            COVERAGE=$(python -c "import json; data = json.load(open('docstring-coverage.json')); print(f\"{data['coverage']:.1f}%\")")
            echo "📊 **Coverage**: $COVERAGE" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Coverage data not available**" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # CLAUDE.md verification
          echo "### CLAUDE.md Anchor Verification" >> $GITHUB_STEP_SUMMARY
          echo "✅ All anchor comments verified" >> $GITHUB_STEP_SUMMARY

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site/
          retention-days: 7

  deploy-docs:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: ./site

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
